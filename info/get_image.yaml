- find:
    paths: /tmp/
    patterns: "ec2_image_info_output_{{ region }}_{{os_distro}}_{{os_version}}.json"
    age: 30d
  register: older_files

- file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ older_files.files }}"

- stat:
    path: /tmp/ec2_image_info_output_{{ region }}_{{os_distro}}_{{os_version}}.json
  register: stat_result

- include_vars:
    file: /tmp/ec2_image_info_output_{{ region }}_{{os_distro}}_{{os_version}}.json
    name: image_info_output_cache
  when: stat_result.stat.exists


- ec2_ami_info:
    region: "{{region}}"
    filters:
      state: "available"
      architecture: "x86_64"
  register: image_info_output_2
  when: not stat_result.stat.exists

- local_action: copy content={{ image_info_output_2 }} dest=/tmp/ec2_image_info_output_{{ region }}_{{os_distro}}_{{os_version}}.json
  when: not stat_result.stat.exists




#- shell: jq -r '[.images |sort_by(.creation_date) | reverse[] | select(.image_location|contains("{{os_distro}") and contains("{{os_version}}")) | select(.owner_id=="099720109477")|select(.name|contains("ubuntu-eks")|not)][0].image_id' ec2_image_info_output_{{ region }}_{{os_distro}}_{{os_version}}.json
- shell: jq -r '[.images |sort_by(.creation_date) | reverse[] | select(.image_location|contains({{os_distro}) and contains({{os_version}})) ][0].image_id' /tmp/ec2_image_info_output_{{ region }}_{{os_distro}}_{{os_version}}.json
  register: image_id

- set_stats:
   data:
     images: "{{ image_id.stdout }}"
  register: get_images_output



