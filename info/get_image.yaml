- find:
    paths: /tmp/
    patterns: "image_info_output_{{ region }}_{{os_distro}}_{{os_version}}.json"
    age: 30d
  register: older_files

- file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ older_files.files }}"

- stat:
    path: /tmp/image_info_output_{{ region }}_{{os_distro}}_{{os_version}}.json
  register: stat_result

- include_vars:
    file: /tmp/image_info_output_{{ region }}_{{os_distro}}_{{os_version}}.json
    name: image_info_output_cache
  when: stat_result.stat.exists


- ec2_ami_info:
    region: "{{region}}"
    filters:
      state: "available"
      platform: "Linux/UNIX"
      manifest-location: "*ubunut*"
  register: image_info_output_2
#  when: not stat_result.stat.exists

- local_action: copy content={{ image_info_output_2 }} dest=/tmp/image_info_output_{{ region }}_{{os_distro}}_{{os_version}}.json
#  when: not stat_result.stat.exists




#- shell: jq '.images[] | select(.image_location|contains("ubuntu"))' /tmp/image_info_output_{{ location }}_{{os_distro}}_{{os_version}}.json
#  register: image_id
#
#- set_stats:
#   data:
#     images: "{{ image_id.stdout }}"
# register: get_images_output



