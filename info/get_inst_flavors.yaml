- hosts: localhost
  vars:
    ansible_python_interpreter: /usr/bin/python3

  tasks:

    - local_action: copy content={{ hostvars['localhost']['instances'] }} dest=/tmp/{{random_name}}_ec2_request_instances.json

    - find:
        paths: /tmp/
        patterns: "ec2_flavor_info_output_{{region}}.json"
        age: 30d
      register: older_files

    - file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ older_files.files }}"
      
    - find:
        paths: /tmp/
        patterns: "*_ec2_selected_flavors_{{region}}.json"
        age: 1d
      register: older_files

    - file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ older_files.files }}"

    - stat:
        path: /tmp/ec2_flavor_info_output_{{region}}.json
      register: stat_result

    - shell: python "{{ playbook_dir }}"/list_vms.py "{{hostvars['localhost']['credentials'][0]['aws_access_key_id']}}" "{{hostvars['localhost']['credentials'][0]['aws_secret_access_key']}}" "{{region}}" > /tmp/ec2_flavor_info_output_{{region}}.json
      when: not stat_result.stat.exists

    - shell: cat /tmp/ec2_flavor_info_output_{{region}}.json
      register: flavors_output

    - shell: python "{{ playbook_dir }}"/select_best_flavor.py /tmp/ec2_flavor_info_output_{{region}}.json /tmp/{{random_name}}_ec2_request_instances.json > /tmp/{{random_name}}_ec2_selected_flavors_{{region}}.json
      register: select_best_flavors_output

    - include_vars:
        file: /tmp/{{random_name}}_ec2_selected_flavors_{{region}}.json
        name: selected_flavors

    - set_stats:
        data: "{{selected_flavors}}"
      register: flavor_stats_output
